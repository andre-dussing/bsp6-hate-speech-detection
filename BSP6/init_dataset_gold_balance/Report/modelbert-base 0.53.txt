modelbert-base-uncaseddataset: /content/drive/MyDrive/BSP6/init_dataset_gold_balance
structure of the model: 
BertForSequenceClassification(
  (bert): BertModel(
    (embeddings): BertEmbeddings(
      (word_embeddings): Embedding(30522, 768, padding_idx=0)
      (position_embeddings): Embedding(512, 768)
      (token_type_embeddings): Embedding(2, 768)
      (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
      (dropout): Dropout(p=0.1, inplace=False)
    )
    (encoder): BertEncoder(
      (layer): ModuleList(
        (0-11): 12 x BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
      )
    )
    (pooler): BertPooler(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (activation): Tanh()
    )
  )
  (dropout): Dropout(p=0.1, inplace=False)
  (classifier): Linear(in_features=768, out_features=3, bias=True)
)
Tokenizer max length train:225Tokenizer max length val:225Tokenizer max length test:225
TrainingArguments(
_n_gpu=1,
adafactor=False,
adam_beta1=0.9,
adam_beta2=0.999,
adam_epsilon=1e-08,
auto_find_batch_size=False,
bf16=False,
bf16_full_eval=False,
data_seed=None,
dataloader_drop_last=False,
dataloader_num_workers=0,
dataloader_pin_memory=True,
ddp_backend=None,
ddp_bucket_cap_mb=None,
ddp_find_unused_parameters=None,
ddp_timeout=1800,
debug=[],
deepspeed=None,
disable_tqdm=False,
do_eval=True,
do_predict=False,
do_train=False,
eval_accumulation_steps=None,
eval_delay=0,
eval_steps=50,
evaluation_strategy=steps,
fp16=False,
fp16_backend=auto,
fp16_full_eval=False,
fp16_opt_level=O1,
fsdp=[],
fsdp_config={'fsdp_min_num_params': 0, 'xla': False, 'xla_fsdp_grad_ckpt': False},
fsdp_min_num_params=0,
fsdp_transformer_layer_cls_to_wrap=None,
full_determinism=False,
gradient_accumulation_steps=1,
gradient_checkpointing=False,
greater_is_better=False,
group_by_length=False,
half_precision_backend=auto,
hub_model_id=None,
hub_private_repo=False,
hub_strategy=every_save,
hub_token=<HUB_TOKEN>,
ignore_data_skip=False,
include_inputs_for_metrics=False,
jit_mode_eval=False,
label_names=None,
label_smoothing_factor=0.0,
learning_rate=2e-05,
length_column_name=length,
load_best_model_at_end=True,
local_rank=0,
log_level=passive,
log_level_replica=warning,
log_on_each_node=True,
logging_dir=./results/runs/Jun11_13-43-49_c7dc168e2572,
logging_first_step=False,
logging_nan_inf_filter=True,
logging_steps=50,
logging_strategy=steps,
lr_scheduler_type=linear,
max_grad_norm=1.0,
max_steps=-1,
metric_for_best_model=loss,
mp_parameters=,
no_cuda=False,
num_train_epochs=5,
optim=adamw_hf,
optim_args=None,
output_dir=./results,
overwrite_output_dir=True,
past_index=-1,
per_device_eval_batch_size=32,
per_device_train_batch_size=32,
prediction_loss_only=False,
push_to_hub=False,
push_to_hub_model_id=None,
push_to_hub_organization=None,
push_to_hub_token=<PUSH_TO_HUB_TOKEN>,
ray_scope=last,
remove_unused_columns=True,
report_to=['tensorboard'],
resume_from_checkpoint=None,
run_name=./results,
save_on_each_node=False,
save_safetensors=False,
save_steps=500,
save_strategy=steps,
save_total_limit=None,
seed=42,
sharded_ddp=[],
skip_memory_metrics=True,
tf32=None,
torch_compile=False,
torch_compile_backend=None,
torch_compile_mode=None,
torchdynamo=None,
tpu_metrics_debug=False,
tpu_num_cores=None,
use_ipex=False,
use_legacy_prediction_loop=False,
use_mps_device=False,
warmup_ratio=0.0,
warmup_steps=0,
weight_decay=0.1,
xpu_backend=None,
)
Confusion Matrix
[[96 13 93]
 [52 27 76]
 [48 11 96]]
Classification Report
              precision    recall  f1-score   support

        Hate       0.49      0.48      0.48       202
     Neutral       0.53      0.17      0.26       155
     Counter       0.36      0.62      0.46       155

    accuracy                           0.43       512
   macro avg       0.46      0.42      0.40       512
weighted avg       0.46      0.43      0.41       512
Confusion Matrix
[[134  43  25]
 [ 63  78  14]
 [ 64  57  34]]
Classification Report
              precision    recall  f1-score   support

        Hate       0.51      0.66      0.58       202
     Neutral       0.44      0.50      0.47       155
     Counter       0.47      0.22      0.30       155

    accuracy                           0.48       512
   macro avg       0.47      0.46      0.45       512
weighted avg       0.48      0.48      0.46       512
Confusion Matrix
[[148  23  31]
 [ 69  59  27]
 [ 71  36  48]]
Classification Report
              precision    recall  f1-score   support

        Hate       0.51      0.73      0.60       202
     Neutral       0.50      0.38      0.43       155
     Counter       0.45      0.31      0.37       155

    accuracy                           0.50       512
   macro avg       0.49      0.47      0.47       512
weighted avg       0.49      0.50      0.48       512
Confusion Matrix
[[118  28  56]
 [ 42  65  48]
 [ 36  40  79]]
Classification Report
              precision    recall  f1-score   support

        Hate       0.60      0.58      0.59       202
     Neutral       0.49      0.42      0.45       155
     Counter       0.43      0.51      0.47       155

    accuracy                           0.51       512
   macro avg       0.51      0.50      0.50       512
weighted avg       0.52      0.51      0.51       512
Confusion Matrix
[[111  27  64]
 [ 33  63  59]
 [ 31  30  94]]
Classification Report
              precision    recall  f1-score   support

        Hate       0.63      0.55      0.59       202
     Neutral       0.53      0.41      0.46       155
     Counter       0.43      0.61      0.51       155

    accuracy                           0.52       512
   macro avg       0.53      0.52      0.52       512
weighted avg       0.54      0.52      0.52       512
Confusion Matrix
[[102  40  60]
 [ 28  82  45]
 [ 27  49  79]]
Classification Report
              precision    recall  f1-score   support

        Hate       0.65      0.50      0.57       202
     Neutral       0.48      0.53      0.50       155
     Counter       0.43      0.51      0.47       155

    accuracy                           0.51       512
   macro avg       0.52      0.51      0.51       512
weighted avg       0.53      0.51      0.52       512
Confusion Matrix
[[123  31  48]
 [ 41  78  36]
 [ 38  51  66]]
Classification Report
              precision    recall  f1-score   support

        Hate       0.61      0.61      0.61       202
     Neutral       0.49      0.50      0.50       155
     Counter       0.44      0.43      0.43       155

    accuracy                           0.52       512
   macro avg       0.51      0.51      0.51       512
weighted avg       0.52      0.52      0.52       512
[{'loss': 1.0879, 'learning_rate': 1.7435897435897438e-05, 'epoch': 0.64, 'step': 50}, {'eval_loss': 1.074479103088379, 'eval_accuracy': 0.427734375, 'eval_precision': 0.46318074694500444, 'eval_recall': 0.427734375, 'eval_f1': 0.40807704492033675, 'eval_runtime': 7.2661, 'eval_samples_per_second': 70.464, 'eval_steps_per_second': 2.202, 'epoch': 0.64, 'step': 50}, {'loss': 1.0519, 'learning_rate': 1.4871794871794874e-05, 'epoch': 1.28, 'step': 100}, {'eval_loss': 1.0130317211151123, 'eval_accuracy': 0.48046875, 'eval_precision': 0.4762147292911347, 'eval_recall': 0.48046875, 'eval_f1': 0.46047868913196766, 'eval_runtime': 7.3228, 'eval_samples_per_second': 69.918, 'eval_steps_per_second': 2.185, 'epoch': 1.28, 'step': 100}, {'loss': 0.9528, 'learning_rate': 1.230769230769231e-05, 'epoch': 1.92, 'step': 150}, {'eval_loss': 0.9824576377868652, 'eval_accuracy': 0.498046875, 'eval_precision': 0.49119967734538783, 'eval_recall': 0.498046875, 'eval_f1': 0.48053187704126743, 'eval_runtime': 7.2622, 'eval_samples_per_second': 70.502, 'eval_steps_per_second': 2.203, 'epoch': 1.92, 'step': 150}, {'loss': 0.8396, 'learning_rate': 9.743589743589744e-06, 'epoch': 2.56, 'step': 200}, {'eval_loss': 0.9927232265472412, 'eval_accuracy': 0.51171875, 'eval_precision': 0.5161654158265981, 'eval_recall': 0.51171875, 'eval_f1': 0.5121089717810834, 'eval_runtime': 7.2609, 'eval_samples_per_second': 70.515, 'eval_steps_per_second': 2.204, 'epoch': 2.56, 'step': 200}, {'loss': 0.7896, 'learning_rate': 7.17948717948718e-06, 'epoch': 3.21, 'step': 250}, {'eval_loss': 1.0078508853912354, 'eval_accuracy': 0.5234375, 'eval_precision': 0.5403194754464286, 'eval_recall': 0.5234375, 'eval_f1': 0.5240256196748654, 'eval_runtime': 7.3824, 'eval_samples_per_second': 69.354, 'eval_steps_per_second': 2.167, 'epoch': 3.21, 'step': 250}, {'loss': 0.6926, 'learning_rate': 4.615384615384616e-06, 'epoch': 3.85, 'step': 300}, {'eval_loss': 1.0110740661621094, 'eval_accuracy': 0.513671875, 'eval_precision': 0.5314688812761799, 'eval_recall': 0.513671875, 'eval_f1': 0.5175837174778093, 'eval_runtime': 7.2671, 'eval_samples_per_second': 70.454, 'eval_steps_per_second': 2.202, 'epoch': 3.85, 'step': 300}, {'loss': 0.6191, 'learning_rate': 2.0512820512820513e-06, 'epoch': 4.49, 'step': 350}, {'eval_loss': 1.0191521644592285, 'eval_accuracy': 0.521484375, 'eval_precision': 0.5210205078125, 'eval_recall': 0.521484375, 'eval_f1': 0.52117943745121, 'eval_runtime': 7.2642, 'eval_samples_per_second': 70.483, 'eval_steps_per_second': 2.203, 'epoch': 4.49, 'step': 350}, {'train_runtime': 510.9752, 'train_samples_per_second': 24.209, 'train_steps_per_second': 0.763, 'total_flos': 1430293788850500.0, 'train_loss': 0.8346244176228841, 'epoch': 5.0, 'step': 390}]Confusion Matrix
[[111  30  43]
 [ 90 171 100]
 [ 47  30  91]]
Classification Report
              precision    recall  f1-score   support

        Hate       0.45      0.60      0.51       184
     Neutral       0.74      0.47      0.58       361
     Counter       0.39      0.54      0.45       168

    accuracy                           0.52       713
   macro avg       0.53      0.54      0.51       713
weighted avg       0.58      0.52      0.53       713
{'eval_loss': 1.0564850568771362, 'eval_accuracy': 0.5231416549789621, 'eval_precision': 0.5819382023517209, 'eval_recall': 0.5231416549789621, 'eval_f1': 0.5317895269618073, 'eval_runtime': 10.076, 'eval_samples_per_second': 70.762, 'eval_steps_per_second': 2.283, 'epoch': 5.0}