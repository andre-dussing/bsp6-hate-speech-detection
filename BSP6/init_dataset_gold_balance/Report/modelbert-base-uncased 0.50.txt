modelbert-base-uncaseddataset: /content/drive/MyDrive/BSP6/init_dataset_gold_balance
structure of the model: 
BertForSequenceClassification(
  (bert): BertModel(
    (embeddings): BertEmbeddings(
      (word_embeddings): Embedding(30522, 768, padding_idx=0)
      (position_embeddings): Embedding(512, 768)
      (token_type_embeddings): Embedding(2, 768)
      (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
      (dropout): Dropout(p=0.1, inplace=False)
    )
    (encoder): BertEncoder(
      (layer): ModuleList(
        (0-11): 12 x BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
      )
    )
    (pooler): BertPooler(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (activation): Tanh()
    )
  )
  (dropout): Dropout(p=0.1, inplace=False)
  (classifier): Linear(in_features=768, out_features=3, bias=True)
)
Tokenizer max length train:225Tokenizer max length val:225Tokenizer max length test:225
TrainingArguments(
_n_gpu=1,
adafactor=False,
adam_beta1=0.9,
adam_beta2=0.999,
adam_epsilon=1e-08,
auto_find_batch_size=False,
bf16=False,
bf16_full_eval=False,
data_seed=None,
dataloader_drop_last=False,
dataloader_num_workers=0,
dataloader_pin_memory=True,
ddp_backend=None,
ddp_bucket_cap_mb=None,
ddp_find_unused_parameters=None,
ddp_timeout=1800,
debug=[],
deepspeed=None,
disable_tqdm=False,
do_eval=True,
do_predict=False,
do_train=False,
eval_accumulation_steps=None,
eval_delay=0,
eval_steps=50,
evaluation_strategy=steps,
fp16=False,
fp16_backend=auto,
fp16_full_eval=False,
fp16_opt_level=O1,
fsdp=[],
fsdp_config={'fsdp_min_num_params': 0, 'xla': False, 'xla_fsdp_grad_ckpt': False},
fsdp_min_num_params=0,
fsdp_transformer_layer_cls_to_wrap=None,
full_determinism=False,
gradient_accumulation_steps=1,
gradient_checkpointing=False,
greater_is_better=False,
group_by_length=False,
half_precision_backend=auto,
hub_model_id=None,
hub_private_repo=False,
hub_strategy=every_save,
hub_token=<HUB_TOKEN>,
ignore_data_skip=False,
include_inputs_for_metrics=False,
jit_mode_eval=False,
label_names=None,
label_smoothing_factor=0.0,
learning_rate=2e-05,
length_column_name=length,
load_best_model_at_end=True,
local_rank=0,
log_level=passive,
log_level_replica=warning,
log_on_each_node=True,
logging_dir=./results/runs/Jun11_14-16-49_c7dc168e2572,
logging_first_step=False,
logging_nan_inf_filter=True,
logging_steps=50,
logging_strategy=steps,
lr_scheduler_type=linear,
max_grad_norm=1.0,
max_steps=-1,
metric_for_best_model=loss,
mp_parameters=,
no_cuda=False,
num_train_epochs=5,
optim=adamw_hf,
optim_args=None,
output_dir=./results,
overwrite_output_dir=True,
past_index=-1,
per_device_eval_batch_size=32,
per_device_train_batch_size=32,
prediction_loss_only=False,
push_to_hub=False,
push_to_hub_model_id=None,
push_to_hub_organization=None,
push_to_hub_token=<PUSH_TO_HUB_TOKEN>,
ray_scope=last,
remove_unused_columns=True,
report_to=['tensorboard'],
resume_from_checkpoint=None,
run_name=./results,
save_on_each_node=False,
save_safetensors=False,
save_steps=500,
save_strategy=steps,
save_total_limit=None,
seed=42,
sharded_ddp=[],
skip_memory_metrics=True,
tf32=None,
torch_compile=False,
torch_compile_backend=None,
torch_compile_mode=None,
torchdynamo=None,
tpu_metrics_debug=False,
tpu_num_cores=None,
use_ipex=False,
use_legacy_prediction_loop=False,
use_mps_device=False,
warmup_ratio=0.0,
warmup_steps=0,
weight_decay=0.1,
xpu_backend=None,
)
Confusion Matrix
[[ 45   7 150]
 [ 31  14 110]
 [ 25   1 129]]
Classification Report
              precision    recall  f1-score   support

        Hate       0.45      0.22      0.30       202
     Neutral       0.64      0.09      0.16       155
     Counter       0.33      0.83      0.47       155

    accuracy                           0.37       512
   macro avg       0.47      0.38      0.31       512
weighted avg       0.47      0.37      0.31       512
Confusion Matrix
[[106  65  31]
 [ 52  87  16]
 [ 63  48  44]]
Classification Report
              precision    recall  f1-score   support

        Hate       0.48      0.52      0.50       202
     Neutral       0.43      0.56      0.49       155
     Counter       0.48      0.28      0.36       155

    accuracy                           0.46       512
   macro avg       0.47      0.46      0.45       512
weighted avg       0.47      0.46      0.45       512
Confusion Matrix
[[132  30  40]
 [ 66  58  31]
 [ 63  31  61]]
Classification Report
              precision    recall  f1-score   support

        Hate       0.51      0.65      0.57       202
     Neutral       0.49      0.37      0.42       155
     Counter       0.46      0.39      0.43       155

    accuracy                           0.49       512
   macro avg       0.49      0.47      0.47       512
weighted avg       0.49      0.49      0.48       512
Confusion Matrix
[[103  43  56]
 [ 37  78  40]
 [ 38  41  76]]
Classification Report
              precision    recall  f1-score   support

        Hate       0.58      0.51      0.54       202
     Neutral       0.48      0.50      0.49       155
     Counter       0.44      0.49      0.46       155

    accuracy                           0.50       512
   macro avg       0.50      0.50      0.50       512
weighted avg       0.51      0.50      0.50       512
Confusion Matrix
[[113  30  59]
 [ 37  71  47]
 [ 33  36  86]]
Classification Report
              precision    recall  f1-score   support

        Hate       0.62      0.56      0.59       202
     Neutral       0.52      0.46      0.49       155
     Counter       0.45      0.55      0.50       155

    accuracy                           0.53       512
   macro avg       0.53      0.52      0.52       512
weighted avg       0.54      0.53      0.53       512
Confusion Matrix
[[102  32  68]
 [ 34  74  47]
 [ 28  37  90]]
Classification Report
              precision    recall  f1-score   support

        Hate       0.62      0.50      0.56       202
     Neutral       0.52      0.48      0.50       155
     Counter       0.44      0.58      0.50       155

    accuracy                           0.52       512
   macro avg       0.53      0.52      0.52       512
weighted avg       0.53      0.52      0.52       512
Confusion Matrix
[[128  29  45]
 [ 42  67  46]
 [ 45  34  76]]
Classification Report
              precision    recall  f1-score   support

        Hate       0.60      0.63      0.61       202
     Neutral       0.52      0.43      0.47       155
     Counter       0.46      0.49      0.47       155

    accuracy                           0.53       512
   macro avg       0.52      0.52      0.52       512
weighted avg       0.53      0.53      0.53       512
[{'loss': 1.0902, 'learning_rate': 1.7435897435897438e-05, 'epoch': 0.64, 'step': 50}, {'eval_loss': 1.0960595607757568, 'eval_accuracy': 0.3671875, 'eval_precision': 0.4688230310820285, 'eval_recall': 0.3671875, 'eval_f1': 0.3086539129356721, 'eval_runtime': 6.9868, 'eval_samples_per_second': 73.281, 'eval_steps_per_second': 2.29, 'epoch': 0.64, 'step': 50}, {'loss': 1.0512, 'learning_rate': 1.4871794871794874e-05, 'epoch': 1.28, 'step': 100}, {'eval_loss': 1.0278923511505127, 'eval_accuracy': 0.462890625, 'eval_precision': 0.467298696822479, 'eval_recall': 0.462890625, 'eval_f1': 0.4544096799668738, 'eval_runtime': 7.1432, 'eval_samples_per_second': 71.676, 'eval_steps_per_second': 2.24, 'epoch': 1.28, 'step': 100}, {'loss': 0.9666, 'learning_rate': 1.230769230769231e-05, 'epoch': 1.92, 'step': 150}, {'eval_loss': 1.0031731128692627, 'eval_accuracy': 0.490234375, 'eval_precision': 0.4869842302859624, 'eval_recall': 0.490234375, 'eval_f1': 0.48181290108810926, 'eval_runtime': 7.2824, 'eval_samples_per_second': 70.306, 'eval_steps_per_second': 2.197, 'epoch': 1.92, 'step': 150}, {'loss': 0.8395, 'learning_rate': 9.743589743589744e-06, 'epoch': 2.56, 'step': 200}, {'eval_loss': 1.0148817300796509, 'eval_accuracy': 0.501953125, 'eval_precision': 0.5078235198673654, 'eval_recall': 0.501953125, 'eval_f1': 0.5035777252835207, 'eval_runtime': 7.2456, 'eval_samples_per_second': 70.664, 'eval_steps_per_second': 2.208, 'epoch': 2.56, 'step': 200}, {'loss': 0.7974, 'learning_rate': 7.17948717948718e-06, 'epoch': 3.21, 'step': 250}, {'eval_loss': 1.023000717163086, 'eval_accuracy': 0.52734375, 'eval_precision': 0.536108966648001, 'eval_recall': 0.52734375, 'eval_f1': 0.5288736462635677, 'eval_runtime': 7.2716, 'eval_samples_per_second': 70.41, 'eval_steps_per_second': 2.2, 'epoch': 3.21, 'step': 250}, {'loss': 0.6965, 'learning_rate': 4.615384615384616e-06, 'epoch': 3.85, 'step': 300}, {'eval_loss': 1.0505366325378418, 'eval_accuracy': 0.51953125, 'eval_precision': 0.5349467129669112, 'eval_recall': 0.51953125, 'eval_f1': 0.5216211517699967, 'eval_runtime': 7.2608, 'eval_samples_per_second': 70.516, 'eval_steps_per_second': 2.204, 'epoch': 3.85, 'step': 300}, {'loss': 0.6129, 'learning_rate': 2.0512820512820513e-06, 'epoch': 4.49, 'step': 350}, {'eval_loss': 1.0591063499450684, 'eval_accuracy': 0.529296875, 'eval_precision': 0.5286796926886388, 'eval_recall': 0.529296875, 'eval_f1': 0.5274501702577133, 'eval_runtime': 7.2495, 'eval_samples_per_second': 70.626, 'eval_steps_per_second': 2.207, 'epoch': 4.49, 'step': 350}, {'train_runtime': 506.1626, 'train_samples_per_second': 24.439, 'train_steps_per_second': 0.771, 'total_flos': 1430293788850500.0, 'train_loss': 0.8357507314437475, 'epoch': 5.0, 'step': 390}]Confusion Matrix
[[108  32  44]
 [100 148 113]
 [ 42  28  98]]
Classification Report
              precision    recall  f1-score   support

        Hate       0.43      0.59      0.50       184
     Neutral       0.71      0.41      0.52       361
     Counter       0.38      0.58      0.46       168

    accuracy                           0.50       713
   macro avg       0.51      0.53      0.49       713
weighted avg       0.56      0.50      0.50       713
{'eval_loss': 1.1367650032043457, 'eval_accuracy': 0.4964936886395512, 'eval_precision': 0.5622974621286642, 'eval_recall': 0.4964936886395512, 'eval_f1': 0.5010044068236013, 'eval_runtime': 10.1224, 'eval_samples_per_second': 70.438, 'eval_steps_per_second': 2.272, 'epoch': 5.0}