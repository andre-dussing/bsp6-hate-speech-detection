modelGroNLP/hateBERTdataset: /content/drive/MyDrive/BSP6/init_dataset_gold_balance
structure of the model: 
BertForSequenceClassification(
  (bert): BertModel(
    (embeddings): BertEmbeddings(
      (word_embeddings): Embedding(30522, 768, padding_idx=0)
      (position_embeddings): Embedding(512, 768)
      (token_type_embeddings): Embedding(2, 768)
      (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
      (dropout): Dropout(p=0.1, inplace=False)
    )
    (encoder): BertEncoder(
      (layer): ModuleList(
        (0-11): 12 x BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
      )
    )
    (pooler): BertPooler(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (activation): Tanh()
    )
  )
  (dropout): Dropout(p=0.1, inplace=False)
  (classifier): Linear(in_features=768, out_features=3, bias=True)
)
Tokenizer max length train:225Tokenizer max length val:225Tokenizer max length test:225
TrainingArguments(
_n_gpu=1,
adafactor=False,
adam_beta1=0.9,
adam_beta2=0.999,
adam_epsilon=1e-08,
auto_find_batch_size=False,
bf16=False,
bf16_full_eval=False,
data_seed=None,
dataloader_drop_last=False,
dataloader_num_workers=0,
dataloader_pin_memory=True,
ddp_backend=None,
ddp_bucket_cap_mb=None,
ddp_find_unused_parameters=None,
ddp_timeout=1800,
debug=[],
deepspeed=None,
disable_tqdm=False,
do_eval=True,
do_predict=False,
do_train=False,
eval_accumulation_steps=None,
eval_delay=0,
eval_steps=50,
evaluation_strategy=steps,
fp16=False,
fp16_backend=auto,
fp16_full_eval=False,
fp16_opt_level=O1,
fsdp=[],
fsdp_config={'fsdp_min_num_params': 0, 'xla': False, 'xla_fsdp_grad_ckpt': False},
fsdp_min_num_params=0,
fsdp_transformer_layer_cls_to_wrap=None,
full_determinism=False,
gradient_accumulation_steps=1,
gradient_checkpointing=False,
greater_is_better=False,
group_by_length=False,
half_precision_backend=auto,
hub_model_id=None,
hub_private_repo=False,
hub_strategy=every_save,
hub_token=<HUB_TOKEN>,
ignore_data_skip=False,
include_inputs_for_metrics=False,
jit_mode_eval=False,
label_names=None,
label_smoothing_factor=0.0,
learning_rate=2e-05,
length_column_name=length,
load_best_model_at_end=True,
local_rank=0,
log_level=passive,
log_level_replica=warning,
log_on_each_node=True,
logging_dir=./results/runs/Jun11_13-54-25_c7dc168e2572,
logging_first_step=False,
logging_nan_inf_filter=True,
logging_steps=50,
logging_strategy=steps,
lr_scheduler_type=linear,
max_grad_norm=1.0,
max_steps=-1,
metric_for_best_model=loss,
mp_parameters=,
no_cuda=False,
num_train_epochs=5,
optim=adamw_hf,
optim_args=None,
output_dir=./results,
overwrite_output_dir=True,
past_index=-1,
per_device_eval_batch_size=32,
per_device_train_batch_size=32,
prediction_loss_only=False,
push_to_hub=False,
push_to_hub_model_id=None,
push_to_hub_organization=None,
push_to_hub_token=<PUSH_TO_HUB_TOKEN>,
ray_scope=last,
remove_unused_columns=True,
report_to=['tensorboard'],
resume_from_checkpoint=None,
run_name=./results,
save_on_each_node=False,
save_safetensors=False,
save_steps=500,
save_strategy=steps,
save_total_limit=None,
seed=42,
sharded_ddp=[],
skip_memory_metrics=True,
tf32=None,
torch_compile=False,
torch_compile_backend=None,
torch_compile_mode=None,
torchdynamo=None,
tpu_metrics_debug=False,
tpu_num_cores=None,
use_ipex=False,
use_legacy_prediction_loop=False,
use_mps_device=False,
warmup_ratio=0.0,
warmup_steps=0,
weight_decay=0.1,
xpu_backend=None,
)
Confusion Matrix
[[ 34  23 145]
 [ 23  41  91]
 [ 19   9 127]]
Classification Report
              precision    recall  f1-score   support

        Hate       0.45      0.17      0.24       202
     Neutral       0.56      0.26      0.36       155
     Counter       0.35      0.82      0.49       155

    accuracy                           0.39       512
   macro avg       0.45      0.42      0.36       512
weighted avg       0.45      0.39      0.35       512
Confusion Matrix
[[89 63 50]
 [35 95 25]
 [48 42 65]]
Classification Report
              precision    recall  f1-score   support

        Hate       0.52      0.44      0.48       202
     Neutral       0.47      0.61      0.54       155
     Counter       0.46      0.42      0.44       155

    accuracy                           0.49       512
   macro avg       0.49      0.49      0.48       512
weighted avg       0.49      0.49      0.48       512
Confusion Matrix
[[104  34  64]
 [ 50  69  36]
 [ 57  21  77]]
Classification Report
              precision    recall  f1-score   support

        Hate       0.49      0.51      0.50       202
     Neutral       0.56      0.45      0.49       155
     Counter       0.44      0.50      0.46       155

    accuracy                           0.49       512
   macro avg       0.49      0.49      0.49       512
weighted avg       0.49      0.49      0.49       512
Confusion Matrix
[[84 35 83]
 [36 74 45]
 [39 27 89]]
Classification Report
              precision    recall  f1-score   support

        Hate       0.53      0.42      0.47       202
     Neutral       0.54      0.48      0.51       155
     Counter       0.41      0.57      0.48       155

    accuracy                           0.48       512
   macro avg       0.49      0.49      0.48       512
weighted avg       0.50      0.48      0.48       512
Confusion Matrix
[[92 33 77]
 [37 65 53]
 [38 28 89]]
Classification Report
              precision    recall  f1-score   support

        Hate       0.55      0.46      0.50       202
     Neutral       0.52      0.42      0.46       155
     Counter       0.41      0.57      0.48       155

    accuracy                           0.48       512
   macro avg       0.49      0.48      0.48       512
weighted avg       0.50      0.48      0.48       512
Confusion Matrix
[[105  38  59]
 [ 40  78  37]
 [ 48  29  78]]
Classification Report
              precision    recall  f1-score   support

        Hate       0.54      0.52      0.53       202
     Neutral       0.54      0.50      0.52       155
     Counter       0.45      0.50      0.47       155

    accuracy                           0.51       512
   macro avg       0.51      0.51      0.51       512
weighted avg       0.51      0.51      0.51       512
Confusion Matrix
[[108  41  53]
 [ 41  80  34]
 [ 46  35  74]]
Classification Report
              precision    recall  f1-score   support

        Hate       0.55      0.53      0.54       202
     Neutral       0.51      0.52      0.51       155
     Counter       0.46      0.48      0.47       155

    accuracy                           0.51       512
   macro avg       0.51      0.51      0.51       512
weighted avg       0.51      0.51      0.51       512
[{'loss': 1.087, 'learning_rate': 1.7435897435897438e-05, 'epoch': 0.64, 'step': 50}, {'eval_loss': 1.0672560930252075, 'eval_accuracy': 0.39453125, 'eval_precision': 0.4524450502166417, 'eval_recall': 0.39453125, 'eval_f1': 0.35382724019803663, 'eval_runtime': 7.2235, 'eval_samples_per_second': 70.88, 'eval_steps_per_second': 2.215, 'epoch': 0.64, 'step': 50}, {'loss': 1.0127, 'learning_rate': 1.4871794871794874e-05, 'epoch': 1.28, 'step': 100}, {'eval_loss': 1.0214382410049438, 'eval_accuracy': 0.486328125, 'eval_precision': 0.4885010576723422, 'eval_recall': 0.486328125, 'eval_f1': 0.48320677472224816, 'eval_runtime': 7.2813, 'eval_samples_per_second': 70.317, 'eval_steps_per_second': 2.197, 'epoch': 1.28, 'step': 100}, {'loss': 0.9345, 'learning_rate': 1.230769230769231e-05, 'epoch': 1.92, 'step': 150}, {'eval_loss': 1.0044186115264893, 'eval_accuracy': 0.48828125, 'eval_precision': 0.4946159366674364, 'eval_recall': 0.48828125, 'eval_f1': 0.4888631117235285, 'eval_runtime': 7.2324, 'eval_samples_per_second': 70.793, 'eval_steps_per_second': 2.212, 'epoch': 1.92, 'step': 150}, {'loss': 0.837, 'learning_rate': 9.743589743589744e-06, 'epoch': 2.56, 'step': 200}, {'eval_loss': 1.0143260955810547, 'eval_accuracy': 0.482421875, 'eval_precision': 0.4973176660109798, 'eval_recall': 0.482421875, 'eval_f1': 0.48242933975223934, 'eval_runtime': 7.2267, 'eval_samples_per_second': 70.849, 'eval_steps_per_second': 2.214, 'epoch': 2.56, 'step': 200}, {'loss': 0.7778, 'learning_rate': 7.17948717948718e-06, 'epoch': 3.21, 'step': 250}, {'eval_loss': 1.020268440246582, 'eval_accuracy': 0.48046875, 'eval_precision': 0.49654809016791923, 'eval_recall': 0.48046875, 'eval_f1': 0.48086821443786965, 'eval_runtime': 7.2182, 'eval_samples_per_second': 70.931, 'eval_steps_per_second': 2.217, 'epoch': 3.21, 'step': 250}, {'loss': 0.6996, 'learning_rate': 4.615384615384616e-06, 'epoch': 3.85, 'step': 300}, {'eval_loss': 1.0125131607055664, 'eval_accuracy': 0.509765625, 'eval_precision': 0.5132000820752189, 'eval_recall': 0.509765625, 'eval_f1': 0.5107184488140125, 'eval_runtime': 7.2616, 'eval_samples_per_second': 70.508, 'eval_steps_per_second': 2.203, 'epoch': 3.85, 'step': 300}, {'loss': 0.6518, 'learning_rate': 2.0512820512820513e-06, 'epoch': 4.49, 'step': 350}, {'eval_loss': 1.0184667110443115, 'eval_accuracy': 0.51171875, 'eval_precision': 0.5129030050565376, 'eval_recall': 0.51171875, 'eval_f1': 0.5121913751914876, 'eval_runtime': 7.2507, 'eval_samples_per_second': 70.614, 'eval_steps_per_second': 2.207, 'epoch': 4.49, 'step': 350}, {'train_runtime': 512.0898, 'train_samples_per_second': 24.156, 'train_steps_per_second': 0.762, 'total_flos': 1430293788850500.0, 'train_loss': 0.8329254394922501, 'epoch': 5.0, 'step': 390}]Confusion Matrix
[[ 91  32  61]
 [ 94 176  91]
 [ 46  29  93]]
Classification Report
              precision    recall  f1-score   support

        Hate       0.39      0.49      0.44       184
     Neutral       0.74      0.49      0.59       361
     Counter       0.38      0.55      0.45       168

    accuracy                           0.50       713
   macro avg       0.51      0.51      0.49       713
weighted avg       0.57      0.50      0.52       713
{'eval_loss': 1.1214203834533691, 'eval_accuracy': 0.5049088359046283, 'eval_precision': 0.5670977072116846, 'eval_recall': 0.5049088359046283, 'eval_f1': 0.5173211446428597, 'eval_runtime': 10.0907, 'eval_samples_per_second': 70.659, 'eval_steps_per_second': 2.279, 'epoch': 5.0}